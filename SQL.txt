################################
### CREATE USER AND DATABASE ###
################################

SHOW DATABASES;
CREATE DATABASE eidans;
SHOW DATABASES;
USE eidans;

CREATE USER 'rm' IDENTIFIED BY 'pass';
GRANT ALL PRIVILEGES ON *.* TO 'rm' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON eidans TO 'rm';

#####################
### CREATE TABLES ###
#####################

CREATE TABLE ProductTypes (
    ID_Type INT NOT NULL AUTO_INCREMENT,
	PRIMARY KEY (ID_Type),
    Description VARCHAR(255) NOT NULL,
    Code VARCHAR(16)
	);

CREATE TABLE Products (
    ID_Product INT NOT NULL AUTO_INCREMENT,
	PRIMARY KEY (ID_Product),
    Description VARCHAR(255) NOT NULL,
    Code VARCHAR(16),
	Type_ID INT NOT NULL,
	FOREIGN KEY (Type_ID) REFERENCES ProductTypes(ID_Type),
	Amount INT,
	Price DECIMAL
	);


#######################
### POPULATE TABLES ###
#######################

INSERT INTO ProductTypes (Description, Code) VALUES ( "Miscellaneous", "MISC");
INSERT INTO ProductTypes (Description, Code) VALUES ( "Electronics", "ELC");
INSERT INTO ProductTypes (Description, Code) VALUES ( "Food", "FOOD");
INSERT INTO ProductTypes (Description, Code) VALUES ( "Pets", "PET");
INSERT INTO ProductTypes (Description, Code) VALUES ( "Clothing", "CLO");


INSERT INTO Products (Description, Code, Type_ID, Amount, Price) VALUES ("Motorola Moto G", "MOTOMG",1,10,13.37);
INSERT INTO Products (Description, Code, Type_ID, Amount, Price) VALUES ("Nokia 3310", "BRICK",1,10,42.00);
INSERT INTO Products (Description, Code, Type_ID, Amount, Price) VALUES ("Alcatel 360", "ALCA",1,49,60.99);
INSERT INTO Products (Description, Code, Type_ID, Amount, Price) VALUES ("Croissant", "BREAD",2,123,0.99);
INSERT INTO Products (Description, Code, Type_ID, Amount, Price) VALUES ("Baguette", "BREAD",2,654,1.37);
INSERT INTO Products (Description, Code, Type_ID, Amount, Price) VALUES ("Bugatti", "BREAD",2,1,7657643743.99);
INSERT INTO Products (Description, Code, Type_ID, Amount, Price) VALUES ("Absolut", "ABS",2,999,15.00);
INSERT INTO Products (Description, Code, Type_ID, Amount, Price) VALUES ("Valdo Rice", "RICE",2,40,2.64);
INSERT INTO Products (Description, Code, Type_ID, Amount, Price) VALUES ("Rolton", "ROLT",2,420,0.01);
INSERT INTO Products (Description, Code, Type_ID, Amount, Price) VALUES ("Dalmatian", "DAL",3,2,346.20);
INSERT INTO Products (Description, Code, Type_ID, Amount, Price) VALUES ("Mynx", "MNX",3,5,204.00);
INSERT INTO Products (Description, Code, Type_ID, Amount, Price) VALUES ("Sugar Glider", "SUGL",3,3,200.00);
INSERT INTO Products (Description, Code, Type_ID, Amount, Price) VALUES ("Giant African Snail", "SNA",3,1,50.00);
INSERT INTO Products (Description, Code, Type_ID, Amount, Price) VALUES ("Hedgehog", "SONIC",3,1,92.99);
INSERT INTO Products (Description, Code, Type_ID, Amount, Price) VALUES ("Billy Jean is not my girl", "JEANS",4,20,13.37);
INSERT INTO Products (Description, Code, Type_ID, Amount, Price) VALUES ("Victoria Secret Foufa de mo ferriere", "VSDRESS",4,2,54677.57);
INSERT INTO Products (Description, Code, Type_ID, Amount, Price) VALUES ("Baseball Cap", "BCAP",4,80,80.80);
INSERT INTO Products (Description, Code, Type_ID, Amount, Price) VALUES ("Alien", "ALIEN",5,100000,5.99);
INSERT INTO Products (Description, Code, Type_ID, Amount, Price) VALUES ("Predator", "PRED",5,1000,10.99);

################
### INDEXING ###
################

CREATE UNIQUE INDEX product_description_idx ON Products ( Description, Code, Type_ID );

##################
### PROCEDURES ###
##################

### ProductsGetAll ###
USE `eidans`;
DROP procedure IF EXISTS `eidans`.`ProductsGetAll`;

DELIMITER $$
USE `eidans`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `ProductsGetAll`()
BEGIN
	Select 
    p.ID_Product as "ProductID", 
    p.Description as "ProductDescription", 
    p.Code as "ProductCode", 
    t.Description as "TypeDescription",
    t.Code as "TypeCode",
    t.ID_Type as "TypeID",
    p.Amount as "Amount", 
    p.Price as "Price" 
    from Products as p, ProductTypes as t
    WHERE p.Type_ID = t.ID_Type
	ORDER BY p.ID_Product DESC;
END$$

DELIMITER ;

### TypesGetAll ###
USE `eidans`;
DROP procedure IF EXISTS `TypesGetAll`;
DELIMITER $$
USE `eidans`$$

CREATE PROCEDURE `TypesGetAll` ()
BEGIN
SELECT 
	ID_Type, Description, Code
    FROM ProductTypes;
END$$
DELIMITER ;

### DeleteProduct ###
USE `eidans`;
DROP procedure IF EXISTS `DeleteProduct`;
DELIMITER $$
USE `eidans`$$

CREATE PROCEDURE `DeleteProduct` (
IN del_ID INT)
BEGIN
DELETE FROM Products WHERE ID_Product = del_ID;
END$$
DELIMITER ;

### EditProduct ###
USE `eidans`;
DROP procedure IF EXISTS `EditProduct`;
DELIMITER $$
USE `eidans`$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `EditProduct`(
IN new_ID INT,
IN new_desc VARCHAR(255),
IN new_code VARCHAR(16),
IN new_Type_ID INT,
IN new_amount INT,
IN new_price DECIMAL)
BEGIN
UPDATE Products SET 
	Description = new_desc, 
	Code = new_code,
    Type_ID = new_Type_ID,
    Amount = new_amount,
    Price = new_price
	WHERE ID_Product = new_ID;
END$$
DELIMITER ;

### FindProductByID ###
USE `eidans`;
DROP procedure IF EXISTS `FindProductByID`;
DELIMITER $$
USE `eidans`$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `FindProductByID`(
in new_ID int)
BEGIN
	SELECT
    p.ID_Product as "ProductID", 
    p.Description as "ProductDescription", 
    p.Code as "ProductCode", 
    t.ID_Type as "TypeID",
    t.Description as "TypeDescription",
    t.Code as "TypeCode",
    p.Amount, 
    p.Price 
    from Products as p, ProductTypes as t
    WHERE p.ID_Product = new_ID 
    AND p.Type_ID = t.ID_Type;
END$$
DELIMITER ;

### AddProduct ###
USE `eidans`;
DROP procedure IF EXISTS `AddProduct`;
DELIMITER $$
USE `eidans`$$

CREATE PROCEDURE `AddProduct` (
IN new_desc VARCHAR(255),
IN new_code VARCHAR(16),
IN new_Type_ID INT,
IN new_amount INT,
IN new_price DECIMAL)
BEGIN
INSERT INTO Products (
	Description, 
    Code, 
    Type_ID, 
    Amount, 
    Price) 
    VALUES (new_desc, 
    new_code,
    new_Type_ID,
    new_amount,
	new_price);
END$$
DELIMITER ;
